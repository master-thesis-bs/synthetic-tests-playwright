name: Core flow
on: workflow_call

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        if: success()
        run: npx playwright test

      - name: Load test report history
        uses: actions/checkout@v4.1.6
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.9
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results
          keep_reports: 20

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4.0.0
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Parse and Aggregate Test Results from Allure JSON Files
        id: aggregate_results
        run: |
          TOTAL_TESTS=0
          PASSED=0
          FAILED=0
          SKIPPED=0
          ERRORS=0
          DURATION=0

          for file in $(find allure-results/ -name "*-result.json"); do
            echo $file
            STATUS=$(jq -r '.status' $file)
            START=$(jq -r '.start' $file)
            STOP=$(jq -r '.stop' $file)
          
            # Count the status
            TOTAL_TESTS=$((TOTAL_TESTS + 1))
            if [ "$STATUS" == "passed" ]; then
              PASSED=$((PASSED + 1))
            elif [ "$STATUS" == "failed" ]; then
              FAILED=$((FAILED + 1))
            elif [ "$STATUS" == "skipped" ]; then
              SKIPPED=$((SKIPPED + 1))
            elif [ "$STATUS" == "broken" ]; then
              ERRORS=$((ERRORS + 1))
            fi
          
            # Accumulate the duration
            DURATION=$((DURATION + STOP - START))
          done
          
          # Calculate the pass percentage
          PERCENTAGE=$((100 * PASSED / TOTAL_TESTS))
          
          # Convert the duration to seconds with a decimal value
          DURATION_SECONDS=$(echo "scale=3; $DURATION / 1000" | bc -l)
          
          echo $TOTAL_TESTS
          echo $PASSED
          echo $FAILED
          echo $SKIPPED
          echo $ERRORS
          echo $DURATION_SECONDS

          # Export the variables to the GitHub environment
          echo "total=$TOTAL_TESTS" >> $GITHUB_ENV
          echo "passed=$PASSED" >> $GITHUB_ENV
          echo "failed=$FAILED" >> $GITHUB_ENV
          echo "skipped=$SKIPPED" >> $GITHUB_ENV
          echo "errors=$ERRORS" >> $GITHUB_ENV
          echo "duration=$DURATION_SECONDS" >> $GITHUB_ENV
          echo "percentage=$PERCENTAGE" >> $GITHUB_ENV


      - name: Post to a Slack channel
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C0721UJDXSP'
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Playwright Synthetic Tests Results*"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Results:* ${{ env.passed }}/ ${{ env.total }} Passed ( ${{ env.percentage }}% )"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Duration:* ${{ env.duration }} seconds"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://master-thesis-bs.github.io/synthetic-tests-playwright/${{ github.run_number }}|Go to Test Results>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Go to Github Action>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
